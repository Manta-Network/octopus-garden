service: octopus-garden

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs16.x
  stage: prod
  profile: pelagos-service
  region: eu-central-1
  lambdaHashingVersion: 20201221
  iam:
    role:
      name: octopus-garden
      # https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-paramstore-access.html
      statements:
        -
          Effect: Allow
          Action:
            - 'ssm:DescribeParameters'
          Resource: '*'
        -
          Effect: Allow
          Action:
            - 'ssm:GetParameter'
          Resource: 'arn:aws:ssm:eu-central-1::parameter/octopus_garden_*'

plugins:
  - serverless-offline
useDotenv: true

package:
  excludeDevDependencies: true

functions:
  account:
    handler: handler.account
    events:
      -
        http:
          path: account/{address}
          method: get
          cors: true
          request:
            parameters:
               paths:
                 address: true
  circulation:
    handler: handler.circulation
    events:
      -
        http:
          path: circulation
          method: get
          cors: true
  circulationAsDecimal:
    handler: handler.circulationAsDecimal
    events:
      -
        http:
          path: circulationAsDecimal
          method: get
          cors: true
  circulatingSupply:
    handler: handler.circulatingSupply
    events:
      -
        http:
          path: circulatingSupply
          method: get
          cors: true
  balance:
    environment:
      subscan_api_key: ${ssm:/octopus_garden_subscan_api_key}
    handler: balance.over
    events:
      -
        http:
          path: balance/over/{amount}
          method: get
          cors: true
          request:
            parameters:
               paths:
                 amount: true
  candidatePool:
    timeout: 29
    environment:
      octopus_garden_db_read: ${ssm:/octopus_garden_db_read}
    handler: collation.list
    events:
      -
        http:
          path: collators
          method: get
          cors: true
  candidateInfo:
    timeout: 29
    environment:
      octopus_garden_db_read: ${ssm:/octopus_garden_db_read}
    handler: collation.info
    events:
      -
        http:
          path: collator/{account}/info
          method: get
          cors: true
          request:
            parameters:
               paths:
                 account: true
  candidateHistory:
    timeout: 29
    environment:
      octopus_garden_db_read: ${ssm:/octopus_garden_db_read}
    handler: collation.history
    events:
      -
        http:
          path: collator/{account}/history
          method: get
          cors: true
          request:
            parameters:
               paths:
                 account: true
  candidateSummary:
    timeout: 29
    environment:
      octopus_garden_db_read: ${ssm:/octopus_garden_db_read}
    handler: collation.summary
    events:
      -
        http:
          path: collator/{account}/summary/{start}/{end}
          method: get
          cors: true
          request:
            parameters:
               paths:
                 account: true
                 start: true
                 end: true
  stakingRound:
    timeout: 29
    environment:
      octopus_garden_db_read: ${ssm:/octopus_garden_db_read}
    handler: collation.round
    events:
      -
        http:
          path: staking/round
          method: get
          cors: true
  bonds:
    timeout: 29
    handler: collation.bonds
    events:
      -
        http:
          path: bonds
          method: get
          cors: true
